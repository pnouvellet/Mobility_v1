.01*7
.01*7*52
100*10
75+2*65+3*55
370/6
85+65+85+75*2+65
450/6
75*2+65*2+85+55
420/6
3*65+55*2+75
380/6
65*3+55+2*75
400/6
2*5*100 + 2*700
2400+900+6000
20*10/60
16-11
5*60/10
3*60/10
2*60/10
sum(1:4)
4^3
20/400
library(Rfast)
a=matrix(runif(6),2,3)
a
b=matrix(runif(6),3,2)
x <- seq(-1,10)
plot(x,x^-2)
x <- seq(-10,10,by = .01)
plot(x,x^-2)
x <- seq(-1,1,by = .01)
plot(x,x^-2)
plot(x,(x+1)^-2)
plot(x,(x-1)^-2)
plot(x,x^-2)
plot(x,x^-2,type='l')
x <- seq(-.1,.1,by = .001)
plot(x,x^-2,type='l')
0^-2
x <- seq(-.1,.1,by = .001)
plot(x,x^2,type='l')
Tbest<-10
t <- seq(0,20,.01)
sigmat=1
plot(t,dnorm(x = t,mean = Tbest, sd = sigmat)/dnorm(x = Tbest,mean = Tbest, sd = sigmat))
library(knitr)
library(EpiEstim)
library(ebolaproj)
library(Hmisc)
opts_chunk$set(collapse = TRUE)
opts_chunk$set(fig.path='figs/', fig.keep='high',
dev=c('png'), fig.width=8, fig.height=8, cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
SI_gamma_dist_EpiEstim
## SI
### 1. Estimating R_t with EpiEstim
si_mean <- d$si_mean[1]
si_std <- d$si_std[1]
d <- readRDS(file = paste0('../covid19-projections/Rdata/data_',date_week_finishing,'.rds'))
date_week_finishing <-  as.Date('08/03/2020',format = '%d/%m/%Y')
day.project <- 7
t.window.range <- 7
rep <- 1e2#5e4
d <- readRDS(file = paste0('../covid19-projections/Rdata/data_',date_week_finishing,'.rds'))
I <- d$D_active_transmission
country <- d$Country
N_geo <- length(country)
date_week_finishing <- d$date_week_finishing
## SI
### 1. Estimating R_t with EpiEstim
si_mean <- d$si_mean[1]
si_std <- d$si_std[1]
# CV_SI <- si_std / si_mean
SItrunc <- 20
SI_Distr <- EpiEstim::discr_si(seq(0, SItrunc), mu, si_std) # sapply(0:SItrunc, function(e) EpiEstim::DiscrSI(e,mu,mu*cv) )
SI_Distr <- EpiEstim::discr_si(seq(0, SItrunc), mu = si_mean, si_std = si_std) # sapply(0:SItrunc, function(e) EpiEstim::DiscrSI(e,mu,mu*cv) )
SI_Distr <- EpiEstim::discr_si(seq(0, SItrunc), mu = si_mean, sigma = si_std) # sapply(0:SItrunc, function(e) EpiEstim::DiscrSI(e,mu,mu*cv) )
sum(SI_Distr)
## SI
### 1. Estimating R_t with EpiEstim
si_mean <- d$si_mean[2]
si_std <- d$si_std[2]
# CV_SI <- si_std / si_mean
SItrunc <- 20
SI_Distr <- EpiEstim::discr_si(seq(0, SItrunc), mu = si_mean, sigma = si_std) # sapply(0:SItrunc, function(e) EpiEstim::DiscrSI(e,mu,mu*cv) )
sum(SI_Distr)
library(knitr)
library(Hmisc)
library(EpiEstim)
opts_chunk$set(collapse = TRUE)
opts_chunk$set(fig.path='figs/', fig.keep='high',
dev=c('png'), fig.width=10, fig.height=5, cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
layout(matrix(1:6,3,2,byrow = TRUE))
for (i in 1:N_geo){
plot(I$dates,I[,i+1],pch=16,
ylim=c(0,max(I[,i+1],na.rm = TRUE)),
main = country[i],bty = 'n',
xlab ='', ylab = 'I')
}
load(file = 'Rdata/check_only_beh_notau_withCV.RData')
Acc <- colSums(diff(res$theta)!=0)/(rep-1)
plot(res$logL[,1])
layout(matrix(1:4,2,2))
for (i in 1:length(theta0)){
plot(res$theta[,i],
main = paste0(n_t[i],' - ',round(Acc[i]*100)))#,       ylim = prior_theta[i,])
}
#
# # for (i in 1:5){
#   plot(res$theta[1e3:rep,i],
#        main = paste0(n_t[i],' - ',round(Acc[i]*100)) )#,
#        # ylim = prior_theta[i,])
# }
1/.148
1/6
setwd("~/GitHub/Mobility/workstream/EpiEstimOver/Rdata")
d=readRDS('2020-04-26_output_SI_2.rds')
a=d$resEpi$median_R
View(a)
getwd()
setwd('../')
getwd()
library(rmarkdown)
source(file = '../inputProcessing/Rdata/date_input.r')
rep <- 1e4
# rep_sim <- 1e4
for (date_num in length(dates_input)){
for (si_num in c(1,2)){
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
si <- si_num
rmarkdown::render(input = 'Template_EpiEstim2Over.Rmd',
output_file = paste0('ouput_epiestim2Over_',date_week_finishing,'_SI_',si,'.html'))
}
}
rep=1e3
date_num
si
getwd()
library(knitr)
library(Hmisc)
library(EpiEstim)
library(zoo)
library(latex2exp)
opts_chunk$set(collapse = TRUE)
opts_chunk$set(fig.path='figs/', fig.keep='high',
dev=c('png'), fig.width=9, fig.height=6, cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
# date_week_finishing <-  as.Date('29/03/2020',format = '%d/%m/%Y')
# si <- 2
# rep <- 1e3
# # rep_sim <- 1e2
inputs<- readRDS(file=paste0('../inputProcessing/Rdata/',date_week_finishing,'_inputs_SI_',si,'.rds'))
D <- inputs$D
M <- inputs$M
Ot <- inputs$Ot
W <- inputs$W
H <- inputs$H
SI <- inputs$SI
delta_id <- inputs$delta_id
#
country <- names(D)[-1]
mD <- as.matrix(D[,-1])
N_geo <- ncol(D)-1
N_days <- nrow(D)
N_week <- nrow(D)/7
# epi
R0 <- 5
# for risk
# b <- 0
o <- 1
theta0 <- c(rep(R0,N_geo*N_week),
rep(o,N_geo*N_week))#,
# rep(b,N_geo))
# theta0[2] <- 2
# theta0[3] <- 3
prior_theta <- matrix(c(rep(c(0,10),N_geo*N_week),rep(c(0,1e5),N_geo*N_week)),
length(theta0),2, byrow=TRUE)
# parameter names
f0 <- function(x) paste0('R',x)
f1 <- function(x,y) paste0(x,'_',y)
# f1 <- function(x) paste0('beta_',x)
# f2 <- function(x) paste0('Over_',x)
n_t<- rep(sapply(1:N_week,f0),N_geo)#, sapply(country,f1))#, sapply(country,f2))
n_t<- rep(country,each = N_week)#, sapply(country,f1))#, sapply(country,f2))
n_t<-c(n_t,'over')
# sd dev for proposal
sigma <- rep(1e-1,length(theta0))
# useful functions
sapply(paste0('Rscript/MCMCnoBeta/',(list.files('Rscript/MCMCnoBeta/'))),FUN = source)
# R_mat <- matrix(rep(theta0,each=7),nrow = N_days, ncol = N_geo,byrow = FALSE)
D$United_States_of_America
#check
# res <- MCMC_iter(iter = rep, theta0 = theta0, s = sigma)
res <- MCMC_full(iter = rep, theta0 = theta0, s = sigma, repli_adapt = 10, within_iter = rep/10)
Acc <- colSums(diff(res$theta)!=0)/(rep-1)
# Acc
if(rep >1e2) {
f <- round(seq(1,rep,length.out = 1e2))
}else{
f <- 1:rep
}
plot(res$logL[,1],main=paste0('DIC ',res$DIC[1],', P ',res$DIC[2]))
layout(matrix(1:4,2,2))
for (i in 1:(length(theta0)/2+1)){
if(i == (length(theta0)/2+1)){
plot(res$theta[f,i],
main = paste0(n_t[i],' - ',round(Acc[i]*100)) )
}else{
plot(res$theta[f,i],
main = paste0(n_t[i],' - ',round(Acc[i]*100)) , ylim = prior_theta[i,])
}
}
# apply(res$theta,2,quantile,c(.5,.025,.975))
Acc <- colSums(diff(res$theta)!=0)/(rep-1)
# Acc
if(rep >1e2) {
f <- round(seq(1,rep,length.out = 1e2))
}else{
f <- 1:rep
}
plot(res$logL[,1],main=paste0('DIC ',res$DIC[1],', P ',res$DIC[2]))
layout(matrix(1:4,2,2))
for (i in 1:(length(theta0)/2+1)){
if(i == (length(theta0)/2+1)){
plot(res$theta[f,i],
main = paste0(n_t[i],' - ',round(Acc[i]*100)) )
}else{
plot(res$theta[f,i],
main = paste0(n_t[i],' - ',round(Acc[i]*100)) , ylim = prior_theta[i,])
}
}
# apply(res$theta,2,quantile,c(.5,.025,.975))
library(knitr)
library(Hmisc)
library(EpiEstim)
library(zoo)
library(latex2exp)
opts_chunk$set(collapse = TRUE)
opts_chunk$set(fig.path='figs/', fig.keep='high',
dev=c('png'), fig.width=9, fig.height=6, cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
# date_week_finishing <-  as.Date('29/03/2020',format = '%d/%m/%Y')
# si <- 2
# rep <- 1e3
# # rep_sim <- 1e2
inputs<- readRDS(file=paste0('../inputProcessing/Rdata/',date_week_finishing,'_inputs_SI_',si,'.rds'))
D <- inputs$D
M <- inputs$M
Ot <- inputs$Ot
W <- inputs$W
H <- inputs$H
SI <- inputs$SI
delta_id <- inputs$delta_id
#
country <- names(D)[-1]
mD <- as.matrix(D[,-1])
N_geo <- ncol(D)-1
N_days <- nrow(D)
N_week <- nrow(D)/7
# epi
R0 <- 5
# for risk
# b <- 0
o <- 1
theta0 <- c(rep(R0,N_geo*N_week),
rep(o,N_geo*N_week))#,
# rep(b,N_geo))
# theta0[2] <- 2
# theta0[3] <- 3
prior_theta <- matrix(c(rep(c(0,10),N_geo*N_week),rep(c(0,1e5),N_geo*N_week)),
length(theta0),2, byrow=TRUE)
# parameter names
f0 <- function(x) paste0('R',x)
f1 <- function(x,y) paste0(x,'_',y)
# f1 <- function(x) paste0('beta_',x)
# f2 <- function(x) paste0('Over_',x)
n_t<- rep(sapply(1:N_week,f0),N_geo)#, sapply(country,f1))#, sapply(country,f2))
n_t<- rep(country,each = N_week)#, sapply(country,f1))#, sapply(country,f2))
n_t<-c(n_t,'over')
# sd dev for proposal
sigma <- rep(1e-1,length(theta0))
# useful functions
sapply(paste0('Rscript/MCMCnoBeta/',(list.files('Rscript/MCMCnoBeta/'))),FUN = source)
# R_mat <- matrix(rep(theta0,each=7),nrow = N_days, ncol = N_geo,byrow = FALSE)
#check
# res <- MCMC_iter(iter = rep, theta0 = theta0, s = sigma)
res <- MCMC_full(iter = rep, theta0 = theta0, s = sigma, repli_adapt = 10, within_iter = rep/10)
Acc <- colSums(diff(res$theta)!=0)/(rep-1)
# Acc
if(rep >1e2) {
f <- round(seq(1,rep,length.out = 1e2))
}else{
f <- 1:rep
}
plot(res$logL[,1],main=paste0('DIC ',res$DIC[1],', P ',res$DIC[2]))
layout(matrix(1:4,2,2))
for (i in 1:(length(theta0)/2+1)){
if(i == (length(theta0)/2+1)){
plot(res$theta[f,i],
main = paste0(n_t[i],' - ',round(Acc[i]*100)) )
}else{
plot(res$theta[f,i],
main = paste0(n_t[i],' - ',round(Acc[i]*100)) , ylim = prior_theta[i,])
}
}
# apply(res$theta,2,quantile,c(.5,.025,.975))
N_week
N_geo
library(knitr)
library(Hmisc)
library(EpiEstim)
library(zoo)
library(latex2exp)
opts_chunk$set(collapse = TRUE)
opts_chunk$set(fig.path='figs/', fig.keep='high',
dev=c('png'), fig.width=9, fig.height=6, cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
# date_week_finishing <-  as.Date('29/03/2020',format = '%d/%m/%Y')
# si <- 2
# rep <- 1e3
# # rep_sim <- 1e2
inputs<- readRDS(file=paste0('../inputProcessing/Rdata/',date_week_finishing,'_inputs_SI_',si,'.rds'))
D <- inputs$D
M <- inputs$M
Ot <- inputs$Ot
W <- inputs$W
H <- inputs$H
SI <- inputs$SI
delta_id <- inputs$delta_id
#
country <- names(D)[-1]
mD <- as.matrix(D[,-1])
N_geo <- ncol(D)-1
N_days <- nrow(D)
N_week <- nrow(D)/7
# epi
R0 <- 5
# for risk
# b <- 0
o <- 1
theta0 <- c(rep(R0,N_geo*N_week),
rep(o,N_geo*N_week))#,
# rep(b,N_geo))
# theta0[2] <- 2
# theta0[3] <- 3
prior_theta <- matrix(c(rep(c(0,10),N_geo*N_week),rep(c(0,1e5),N_geo*N_week)),
length(theta0),2, byrow=TRUE)
# parameter names
f0 <- function(x) paste0('R',x)
f1 <- function(x,y) paste0(x,'_',y)
# f1 <- function(x) paste0('beta_',x)
# f2 <- function(x) paste0('Over_',x)
n_t<- rep(sapply(1:N_week,f0),N_geo)#, sapply(country,f1))#, sapply(country,f2))
n_t<- rep(country,each = N_week)#, sapply(country,f1))#, sapply(country,f2))
n_t<-c(n_t,'over')
# sd dev for proposal
sigma <- rep(1e-1,length(theta0))
# useful functions
sapply(paste0('Rscript/MCMCnoBeta/',(list.files('Rscript/MCMCnoBeta/'))),FUN = source)
# R_mat <- matrix(rep(theta0,each=7),nrow = N_days, ncol = N_geo,byrow = FALSE)
#check
# res <- MCMC_iter(iter = rep, theta0 = theta0, s = sigma)
res <- MCMC_full(iter = rep, theta0 = theta0, s = sigma, repli_adapt = 10, within_iter = rep/10)
Acc <- colSums(diff(res$theta)!=0)/(rep-1)
# Acc
if(rep >1e2) {
f <- round(seq(1,rep,length.out = 1e2))
}else{
f <- 1:rep
}
plot(res$logL[,1],main=paste0('DIC ',res$DIC[1],', P ',res$DIC[2]))
layout(matrix(1:4,2,2))
for (i in 1:(length(theta0)/2+1)){
if(i == (length(theta0)/2+1)){
plot(res$theta[f,i],
main = paste0(n_t[i],' - ',round(Acc[i]*100)) )
}else{
plot(res$theta[f,i],
main = paste0(n_t[i],' - ',round(Acc[i]*100)) , ylim = prior_theta[i,])
}
}
# apply(res$theta,2,quantile,c(.5,.025,.975))
library(rmarkdown)
source(file = '../inputProcessing/Rdata/date_input.r')
rep <- 1e4
# rep_sim <- 1e4
for (date_num in length(dates_input)){
for (si_num in c(1,2)){
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
si <- si_num
rmarkdown::render(input = 'Template_EpiEstim2Over.Rmd',
output_file = paste0('ouput_epiestim2Over_',date_week_finishing,'_SI_',si,'.html'))
}
}
library(knitr)
library(Hmisc)
library(EpiEstim)
library(zoo)
library(latex2exp)
opts_chunk$set(collapse = TRUE)
opts_chunk$set(fig.path='figs/', fig.keep='high',
dev=c('png'), fig.width=9, fig.height=6, cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
# date_week_finishing <-  as.Date('29/03/2020',format = '%d/%m/%Y')
# si <- 2
# rep <- 1e3
# # rep_sim <- 1e2
inputs<- readRDS(file=paste0('../inputProcessing/Rdata/',date_week_finishing,'_inputs_SI_',si,'.rds'))
D <- inputs$D
M <- inputs$M
Ot <- inputs$Ot
W <- inputs$W
H <- inputs$H
SI <- inputs$SI
delta_id <- inputs$delta_id
#
country <- names(D)[-1]
mD <- as.matrix(D[,-1])
N_geo <- ncol(D)-1
N_days <- nrow(D)
N_week <- nrow(D)/7
D$France
D$France
library(rmarkdown)
source(file = '../inputProcessing/Rdata/date_input.r')
rep <- 1e4
# rep_sim <- 1e4
for (date_num in 1:length(dates_input)){
for (si_num in c(1,2)){
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
si <- si_num
rmarkdown::render(input = 'Template_EpiEstim2Over.Rmd',
output_file = paste0('ouput_epiestim2Over_',date_week_finishing,'_SI_',si,'.html'))
}
}
getwd()
library(rmarkdown)
source(file = '../inputProcessing/Rdata/date_input.r')
rep <- 1e4
# rep_sim <- 1e4
for (date_num in 1:length(dates_input)){
for (si_num in c(1,2)){
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
si <- si_num
rmarkdown::render(input = 'Template_EpiEstim2Over.Rmd',
output_file = paste0('ouput_epiestim2Over_',date_week_finishing,'_SI_',si,'.html'))
}
}
getwd()
setwd('../R0Over/')
library(rmarkdown)
source(file = '../inputProcessing/Rdata/date_input.r')
rep <- 1e4
rep_sim <- 1e4
for (date_num in 1:length(dates_input)){
for (si_num in c(1,2)){
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
si <- si_num
rmarkdown::render(input = 'Template_R0_over.Rmd',
output_file = paste0('ouput_R0_Over_',date_week_finishing,'_SI_',si,'.html'))
}
}
getwd()
setwd('../R0OverG/')
library(rmarkdown)
source(file = '../inputProcessing/Rdata/date_input.r')
rep <- 1e4
rep_sim <- 1e4
for (date_num in 1:length(dates_input)){
for (si_num in c(1,2)){
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
si <- si_num
rmarkdown::render(input = 'Template_R0_over.Rmd',
output_file = paste0('ouput_R0_Over_',date_week_finishing,'_SI_',si,'.html'))
}
}
getwd()
setwd('../R0BetaOverG')
getwd()
library(rmarkdown)
source(file = '../inputProcessing/Rdata/date_input.r')
rep <- 1e4
rep_sim <- 1e4
for (date_num in 1:length(dates_input)){
for (si_num in c(1,2)){
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
si <- si_num
rmarkdown::render(input = 'Template_R0Beta_over.Rmd',
output_file = paste0('ouput_R0Beta_Over_',date_week_finishing,'_SI_',si,'.html'))
}
}
getwd()
library(rmarkdown)
source(file = '../inputProcessing/Rdata/date_input.r')
rep <- 1e4
rep_sim <- 1e4
for (date_num in 1:length(dates_input)){
for (si_num in c(1,2)){
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
si <- si_num
rmarkdown::render(input = 'Template_R0Beta_over.Rmd',
output_file = paste0('ouput_R0Beta_Over_',date_week_finishing,'_SI_',si,'.html'))
}
}
